<map id="clang::ValueStmt" name="clang::ValueStmt">
<area shape="rect" id="node1" title="Represents a statement that could possibly have a value and type." alt="" coords="149,1110,281,1137"/>
<area shape="rect" id="node3" href="$classclang_1_1AttributedStmt.html" title="Represents an attribute applied to a statement." alt="" coords="329,1059,491,1086"/>
<area shape="rect" id="node4" href="$classclang_1_1Expr.html" title="This represents one expression." alt="" coords="363,1110,457,1137"/>
<area shape="rect" id="node49" href="$classclang_1_1LabelStmt.html" title="LabelStmt &#45; Represents a label, which has a substatement." alt="" coords="345,1161,475,1187"/>
<area shape="rect" id="node2" href="$classclang_1_1Stmt.html" title="Stmt &#45; This represents one statement." alt="" coords="5,1110,101,1137"/>
<area shape="rect" id="node5" href="$classclang_1_1AbstractConditionalOperator.html" title="AbstractConditionalOperator &#45; An abstract base class for ConditionalOperator and BinaryConditionalOpe..." alt="" coords="571,5,764,47"/>
<area shape="rect" id="node6" href="$classclang_1_1AddrLabelExpr.html" title="AddrLabelExpr &#45; The GNU address of label extension, representing &amp;&amp;label." alt="" coords="588,71,747,98"/>
<area shape="rect" id="node7" href="$classclang_1_1ArrayInitIndexExpr.html" title="Represents the index of the current element of an array being initialized by an ArrayInitLoopExpr." alt="" coords="574,122,761,149"/>
<area shape="rect" id="node8" href="$classclang_1_1ArrayInitLoopExpr.html" title="Represents a loop initializing the elements of an array." alt="" coords="577,173,758,199"/>
<area shape="rect" id="node9" href="$classclang_1_1ArraySubscriptExpr.html" title="ArraySubscriptExpr &#45; [C99 6.5.2.1] Array Subscripting." alt="" coords="573,223,762,250"/>
<area shape="rect" id="node10" href="$classclang_1_1ArrayTypeTraitExpr.html" title="An Embarcadero array type trait, as used in the implementation of __array_rank and __array_extent." alt="" coords="574,274,761,301"/>
<area shape="rect" id="node11" href="$classclang_1_1AsTypeExpr.html" title="AsTypeExpr &#45; Clang builtin function __builtin_astype [OpenCL 6.2.4.2] This AST node provides support ..." alt="" coords="597,325,737,351"/>
<area shape="rect" id="node12" href="$classclang_1_1AtomicExpr.html" title="AtomicExpr &#45; Variadic atomic builtins: __atomic_exchange, __atomic_fetch_*, __atomic_load,..." alt="" coords="597,375,737,402"/>
<area shape="rect" id="node13" href="$classclang_1_1BinaryOperator.html" title="A builtin binary operation expression such as &quot;x + y&quot; or &quot;x &lt;= y&quot;." alt="" coords="585,426,749,453"/>
<area shape="rect" id="node14" href="$classclang_1_1BlockExpr.html" title="BlockExpr &#45; Adaptor class for mixing a BlockDecl with expressions." alt="" coords="602,477,733,503"/>
<area shape="rect" id="node15" href="$classclang_1_1CallExpr.html" title="CallExpr &#45; Represents a function call (C99 6.5.2.2, C++ [expr.call])." alt="" coords="608,527,727,554"/>
<area shape="rect" id="node16" href="$classclang_1_1CastExpr.html" title="CastExpr &#45; Base class for type casts, including both implicit casts (ImplicitCastExpr) and explicit c..." alt="" coords="606,578,729,605"/>
<area shape="rect" id="node17" href="$classclang_1_1CharacterLiteral.html" title=" " alt="" coords="583,629,752,655"/>
<area shape="rect" id="node18" href="$classclang_1_1ChooseExpr.html" title="ChooseExpr &#45; GNU builtin&#45;in function __builtin_choose_expr." alt="" coords="596,679,739,706"/>
<area shape="rect" id="node19" href="$classclang_1_1CompoundLiteralExpr.html" title="CompoundLiteralExpr &#45; [C99 6.5.2.5]." alt="" coords="565,730,770,757"/>
<area shape="rect" id="node20" href="$classclang_1_1ConceptSpecializationExpr.html" title="Represents the specialization of a concept &#45; evaluates to a prvalue of type bool." alt="" coords="548,781,787,807"/>
<area shape="rect" id="node21" href="$classclang_1_1ConvertVectorExpr.html" title="ConvertVectorExpr &#45; Clang builtin function __builtin_convertvector This AST node provides support for..." alt="" coords="574,831,761,858"/>
<area shape="rect" id="node22" href="$classclang_1_1CoroutineSuspendExpr.html" title="Represents an expression that might suspend coroutine execution; either a co_await or co_yield expres..." alt="" coords="561,882,773,909"/>
<area shape="rect" id="node23" href="$classclang_1_1CXXBindTemporaryExpr.html" title="Represents binding an expression to a temporary." alt="" coords="558,933,777,959"/>
<area shape="rect" id="node24" href="$classclang_1_1CXXBoolLiteralExpr.html" title="A boolean literal, per ([C++ lex.bool] Boolean literals)." alt="" coords="572,983,763,1010"/>
<area shape="rect" id="node25" href="$classclang_1_1CXXConstructExpr.html" title="Represents a call to a C++ constructor." alt="" coords="576,1034,759,1061"/>
<area shape="rect" id="node26" href="$classclang_1_1CXXDefaultArgExpr.html" title="A default argument (C++ [dcl.fct.default])." alt="" coords="572,1085,763,1111"/>
<area shape="rect" id="node27" href="$classclang_1_1CXXDefaultInitExpr.html" title="A use of a default initializer in a constructor or in aggregate initialization." alt="" coords="572,1135,763,1162"/>
<area shape="rect" id="node28" href="$classclang_1_1CXXDeleteExpr.html" title="Represents a delete expression for memory deallocation and destructor calls, e.g." alt="" coords="585,1186,749,1213"/>
<area shape="rect" id="node29" href="$classclang_1_1CXXDependentScopeMemberExpr.html" title="Represents a C++ member access expression where the actual member referenced could not be resolved be..." alt="" coords="566,1237,769,1279"/>
<area shape="rect" id="node30" href="$classclang_1_1CXXFoldExpr.html" title="Represents a folding of a pack over an operator." alt="" coords="593,1303,741,1330"/>
<area shape="rect" id="node31" href="$classclang_1_1CXXInheritedCtorInitExpr.html" title="Represents a call to an inherited base class constructor from an inheriting constructor." alt="" coords="554,1354,781,1381"/>
<area shape="rect" id="node32" href="$classclang_1_1CXXNewExpr.html" title="Represents a new&#45;expression for memory allocation and constructor calls, e.g: &quot;new CXXNewExpr(foo)&quot;." alt="" coords="592,1405,743,1431"/>
<area shape="rect" id="node33" href="$classclang_1_1CXXNoexceptExpr.html" title="Represents a C++11 noexcept expression (C++ [expr.unary.noexcept])." alt="" coords="576,1455,759,1482"/>
<area shape="rect" id="node34" href="$classclang_1_1CXXNullPtrLiteralExpr.html" title="The null pointer literal (C++11 [lex.nullptr])" alt="" coords="564,1506,771,1533"/>
<area shape="rect" id="node35" href="$classclang_1_1CXXPseudoDestructorExpr.html" title="Represents a C++ pseudo&#45;destructor (C++ [expr.pseudo])." alt="" coords="549,1557,785,1583"/>
<area shape="rect" id="node36" href="$classclang_1_1CXXRewrittenBinaryOperator.html" title="A rewritten comparison expression that was originally written using operator syntax." alt="" coords="569,1608,766,1649"/>
<area shape="rect" id="node37" href="$classclang_1_1CXXScalarValueInitExpr.html" title="An expression &quot;T()&quot; which creates a value&#45;initialized rvalue of type T, which is a non&#45;class type." alt="" coords="558,1674,777,1701"/>
<area shape="rect" id="node38" href="$classclang_1_1CXXStdInitializerListExpr.html" title="Implicit construction of a std::initializer_list&lt;T&gt; object from an array temporary within list&#45;initia..." alt="" coords="580,1725,755,1767"/>
<area shape="rect" id="node39" href="$classclang_1_1CXXThisExpr.html" title="Represents the this expression in C++." alt="" coords="593,1791,741,1818"/>
<area shape="rect" id="node40" href="$classclang_1_1CXXThrowExpr.html" title="A C++ throw&#45;expression (C++ [except.throw])." alt="" coords="587,1842,748,1869"/>
<area shape="rect" id="node41" href="$classclang_1_1CXXTypeidExpr.html" title="A C++ typeid expression (C++ [expr.typeid]), which gets the type_info that corresponds to the supplie..." alt="" coords="586,1893,749,1919"/>
<area shape="rect" id="node42" href="$classclang_1_1CXXUnresolvedConstructExpr.html" title="Describes an explicit type conversion that uses functional notion but could not be resolved because o..." alt="" coords="539,1943,796,1970"/>
<area shape="rect" id="node43" href="$classclang_1_1CXXUuidofExpr.html" title="A Microsoft C++ __uuidof expression, which gets the _GUID that corresponds to the supplied type or ex..." alt="" coords="585,1994,749,2021"/>
<area shape="rect" id="node44" href="$classclang_1_1DeclRefExpr.html" title="A reference to a declared variable, function, enum, etc." alt="" coords="595,2045,740,2071"/>
<area shape="rect" id="node45" href="$classclang_1_1DependentCoawaitExpr.html" title="Represents a &#39;co_await&#39; expression while the type of the promise is dependent." alt="" coords="558,2095,777,2122"/>
<area shape="rect" id="node46" href="$classclang_1_1DependentScopeDeclRefExpr.html" title="A qualified reference to a name whose declaration cannot yet be resolved." alt="" coords="565,2147,769,2188"/>
<area shape="rect" id="node47" href="$classclang_1_1DesignatedInitExpr.html" title="Represents a C99 designated initializer expression." alt="" coords="573,2213,762,2239"/>
<area shape="rect" id="node48" href="$classclang_1_1DesignatedInitUpdateExpr.html" title=" " alt="" coords="549,2263,785,2290"/>
</map>
